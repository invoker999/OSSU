// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
//
// Author: invoker999
// Course: OSSU/nand2tetris
// Email: kaced.sofiane@gmail.com


/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Address selection of the selected register.
    DMux8Way(in = load, sel = address, a = L0, b = L1, c = L2, d = L3, e = L4, f=L5, g = L6, h = L7);

    // 8 registers in memory
    Register(in = in, load = L0, out = out0);
    Register(in = in, load = L1, out = out1);
    Register(in = in, load = L2, out = out2);
    Register(in = in, load = L3, out = out3);
    Register(in = in, load = L4, out = out4);
    Register(in = in, load = L5, out = out5);
    Register(in = in, load = L6, out = out6);
    Register(in = in, load = L7, out = out7);
 
    // Out put Selection via the address

    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6, h = out7, sel = address, out = out);
}
